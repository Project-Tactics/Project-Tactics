#include "SDLInputBackend.h"

#include "../InputSystem.h"

namespace tactics::input {

static KeyAction toKeyAction(SDL_Keycode sdlKey) {
	switch (sdlKey) {
	case SDLK_UNKNOWN			: return KeyAction::KeyUnknown;
	case SDLK_RETURN			: return KeyAction::KeyReturn;
	case SDLK_ESCAPE			: return KeyAction::KeyEscape;
	case SDLK_BACKSPACE			: return KeyAction::KeyBackspace;
	case SDLK_TAB				: return KeyAction::KeyTab;
	case SDLK_SPACE				: return KeyAction::KeySpace;
	case SDLK_EXCLAIM			: return KeyAction::KeyExclaim;
	case SDLK_QUOTEDBL			: return KeyAction::KeyQuotedbl;
	case SDLK_HASH				: return KeyAction::KeyHash;
	case SDLK_PERCENT			: return KeyAction::KeyPercent;
	case SDLK_DOLLAR			: return KeyAction::KeyDollar;
	case SDLK_AMPERSAND			: return KeyAction::KeyAmpersand;
	case SDLK_QUOTE				: return KeyAction::KeyQuote;
	case SDLK_LEFTPAREN			: return KeyAction::KeyLeftparen;
	case SDLK_RIGHTPAREN		: return KeyAction::KeyRightparen;
	case SDLK_ASTERISK			: return KeyAction::KeyAsterisk;
	case SDLK_PLUS				: return KeyAction::KeyPlus;
	case SDLK_COMMA				: return KeyAction::KeyComma;
	case SDLK_MINUS				: return KeyAction::KeyMinus;
	case SDLK_PERIOD			: return KeyAction::KeyPeriod;
	case SDLK_SLASH				: return KeyAction::KeySlash;
	case SDLK_0					: return KeyAction::Key0;
	case SDLK_1					: return KeyAction::Key1;
	case SDLK_2					: return KeyAction::Key2;
	case SDLK_3					: return KeyAction::Key3;
	case SDLK_4					: return KeyAction::Key4;
	case SDLK_5					: return KeyAction::Key5;
	case SDLK_6					: return KeyAction::Key6;
	case SDLK_7					: return KeyAction::Key7;
	case SDLK_8					: return KeyAction::Key8;
	case SDLK_9					: return KeyAction::Key9;
	case SDLK_COLON				: return KeyAction::KeyColon;
	case SDLK_SEMICOLON			: return KeyAction::KeySemicolon;
	case SDLK_LESS				: return KeyAction::KeyLess;
	case SDLK_EQUALS			: return KeyAction::KeyEquals;
	case SDLK_GREATER			: return KeyAction::KeyGreater;
	case SDLK_QUESTION			: return KeyAction::KeyQuestion;
	case SDLK_AT				: return KeyAction::KeyAt;
	case SDLK_LEFTBRACKET		: return KeyAction::KeyLeftbracket;
	case SDLK_BACKSLASH			: return KeyAction::KeyBackslash;
	case SDLK_RIGHTBRACKET		: return KeyAction::KeyRightbracket;
	case SDLK_CARET				: return KeyAction::KeyCaret;
	case SDLK_UNDERSCORE		: return KeyAction::KeyUnderscore;
	case SDLK_BACKQUOTE			: return KeyAction::KeyBackquote;
	case SDLK_a					: return KeyAction::KeyA;
	case SDLK_b					: return KeyAction::KeyB;
	case SDLK_c					: return KeyAction::KeyC;
	case SDLK_d					: return KeyAction::KeyD;
	case SDLK_e					: return KeyAction::KeyE;
	case SDLK_f					: return KeyAction::KeyF;
	case SDLK_g					: return KeyAction::KeyG;
	case SDLK_h					: return KeyAction::KeyH;
	case SDLK_i					: return KeyAction::KeyI;
	case SDLK_j					: return KeyAction::KeyJ;
	case SDLK_k					: return KeyAction::KeyK;
	case SDLK_l					: return KeyAction::KeyL;
	case SDLK_m					: return KeyAction::KeyM;
	case SDLK_n					: return KeyAction::KeyN;
	case SDLK_o					: return KeyAction::KeyO;
	case SDLK_p					: return KeyAction::KeyP;
	case SDLK_q					: return KeyAction::KeyQ;
	case SDLK_r					: return KeyAction::KeyR;
	case SDLK_s					: return KeyAction::KeyS;
	case SDLK_t					: return KeyAction::KeyT;
	case SDLK_u					: return KeyAction::KeyU;
	case SDLK_v					: return KeyAction::KeyV;
	case SDLK_w					: return KeyAction::KeyW;
	case SDLK_x					: return KeyAction::KeyX;
	case SDLK_y					: return KeyAction::KeyY;
	case SDLK_z					: return KeyAction::KeyZ;
	case SDLK_CAPSLOCK			: return KeyAction::KeyCapslock;
	case SDLK_F1				: return KeyAction::KeyF1;
	case SDLK_F2				: return KeyAction::KeyF2;
	case SDLK_F3				: return KeyAction::KeyF3;
	case SDLK_F4				: return KeyAction::KeyF4;
	case SDLK_F5				: return KeyAction::KeyF5;
	case SDLK_F6				: return KeyAction::KeyF6;
	case SDLK_F7				: return KeyAction::KeyF7;
	case SDLK_F8				: return KeyAction::KeyF8;
	case SDLK_F9				: return KeyAction::KeyF9;
	case SDLK_F10				: return KeyAction::KeyF10;
	case SDLK_F11				: return KeyAction::KeyF11;
	case SDLK_F12				: return KeyAction::KeyF12;
	case SDLK_PRINTSCREEN		: return KeyAction::KeyPrintscreen;
	case SDLK_SCROLLLOCK		: return KeyAction::KeyScrolllock;
	case SDLK_PAUSE				: return KeyAction::KeyPause;
	case SDLK_INSERT			: return KeyAction::KeyInsert;
	case SDLK_HOME				: return KeyAction::KeyHome;
	case SDLK_PAGEUP			: return KeyAction::KeyPageup;
	case SDLK_DELETE			: return KeyAction::KeyDelete;
	case SDLK_END				: return KeyAction::KeyEnd;
	case SDLK_PAGEDOWN			: return KeyAction::KeyPagedown;
	case SDLK_RIGHT				: return KeyAction::KeyRight;
	case SDLK_LEFT				: return KeyAction::KeyLeft;
	case SDLK_DOWN				: return KeyAction::KeyDown;
	case SDLK_UP				: return KeyAction::KeyUp;
	case SDLK_NUMLOCKCLEAR		: return KeyAction::KeyNumlockclear;
	case SDLK_KP_DIVIDE			: return KeyAction::KeypadDivide;
	case SDLK_KP_MULTIPLY		: return KeyAction::KeypadMultiply;
	case SDLK_KP_MINUS			: return KeyAction::KeypadMinus;
	case SDLK_KP_PLUS			: return KeyAction::KeypadPlus;
	case SDLK_KP_ENTER			: return KeyAction::KeypadEnter;
	case SDLK_KP_1				: return KeyAction::Keypad1;
	case SDLK_KP_2				: return KeyAction::Keypad2;
	case SDLK_KP_3				: return KeyAction::Keypad3;
	case SDLK_KP_4				: return KeyAction::Keypad4;
	case SDLK_KP_5				: return KeyAction::Keypad5;
	case SDLK_KP_6				: return KeyAction::Keypad6;
	case SDLK_KP_7				: return KeyAction::Keypad7;
	case SDLK_KP_8				: return KeyAction::Keypad8;
	case SDLK_KP_9				: return KeyAction::Keypad9;
	case SDLK_KP_0				: return KeyAction::Keypad0;
	case SDLK_KP_PERIOD			: return KeyAction::KeypadPeriod;
	case SDLK_APPLICATION		: return KeyAction::KeyApplication;
	case SDLK_POWER				: return KeyAction::KeyPower;
	case SDLK_KP_EQUALS			: return KeyAction::KeypadEquals;
	case SDLK_F13				: return KeyAction::KeyF13;
	case SDLK_F14				: return KeyAction::KeyF14;
	case SDLK_F15				: return KeyAction::KeyF15;
	case SDLK_F16				: return KeyAction::KeyF16;
	case SDLK_F17				: return KeyAction::KeyF17;
	case SDLK_F18				: return KeyAction::KeyF18;
	case SDLK_F19				: return KeyAction::KeyF19;
	case SDLK_F20				: return KeyAction::KeyF20;
	case SDLK_F21				: return KeyAction::KeyF21;
	case SDLK_F22				: return KeyAction::KeyF22;
	case SDLK_F23				: return KeyAction::KeyF23;
	case SDLK_F24				: return KeyAction::KeyF24;
	case SDLK_EXECUTE			: return KeyAction::KeyExecute;
	case SDLK_HELP				: return KeyAction::KeyHelp;
	case SDLK_MENU				: return KeyAction::KeyMenu;
	case SDLK_SELECT			: return KeyAction::KeySelect;
	case SDLK_STOP				: return KeyAction::KeyStop;
	case SDLK_AGAIN				: return KeyAction::KeyAgain;
	case SDLK_UNDO				: return KeyAction::KeyUndo;
	case SDLK_CUT				: return KeyAction::KeyCut;
	case SDLK_COPY				: return KeyAction::KeyCopy;
	case SDLK_PASTE				: return KeyAction::KeyPaste;
	case SDLK_FIND				: return KeyAction::KeyFind;
	case SDLK_MUTE				: return KeyAction::KeyMute;
	case SDLK_VOLUMEUP			: return KeyAction::KeyVolumeup;
	case SDLK_VOLUMEDOWN		: return KeyAction::KeyVolumedown;
	case SDLK_KP_COMMA			: return KeyAction::KeypadComma;
	case SDLK_KP_EQUALSAS400	: return KeyAction::KeypadEqualsas400;
	case SDLK_ALTERASE			: return KeyAction::KeyAlterase;
	case SDLK_SYSREQ			: return KeyAction::KeySysreq;
	case SDLK_CANCEL			: return KeyAction::KeyCancel;
	case SDLK_CLEAR				: return KeyAction::KeyClear;
	case SDLK_PRIOR				: return KeyAction::KeyPrior;
	case SDLK_RETURN2			: return KeyAction::KeyReturn2;
	case SDLK_SEPARATOR			: return KeyAction::KeySeparator;
	case SDLK_OUT				: return KeyAction::KeyOut;
	case SDLK_OPER				: return KeyAction::KeyOper;
	case SDLK_CLEARAGAIN		: return KeyAction::KeyClearagain;
	case SDLK_CRSEL				: return KeyAction::KeyCrsel;
	case SDLK_EXSEL				: return KeyAction::KeyExsel;
	case SDLK_KP_00				: return KeyAction::Keypad00;
	case SDLK_KP_000			: return KeyAction::Keypad000;
	case SDLK_THOUSANDSSEPARATOR: return KeyAction::KeyThousandsseparator;
	case SDLK_DECIMALSEPARATOR	: return KeyAction::KeyDecimalseparator;
	case SDLK_CURRENCYUNIT		: return KeyAction::KeyCurrencyunit;
	case SDLK_CURRENCYSUBUNIT	: return KeyAction::KeyCurrencysubunit;
	case SDLK_KP_LEFTPAREN		: return KeyAction::KeypadLeftparen;
	case SDLK_KP_RIGHTPAREN		: return KeyAction::KeypadRightparen;
	case SDLK_KP_LEFTBRACE		: return KeyAction::KeypadLeftbrace;
	case SDLK_KP_RIGHTBRACE		: return KeyAction::KeypadRightbrace;
	case SDLK_KP_TAB			: return KeyAction::KeypadTab;
	case SDLK_KP_BACKSPACE		: return KeyAction::KeypadBackspace;
	case SDLK_KP_A				: return KeyAction::KeypadA;
	case SDLK_KP_B				: return KeyAction::KeypadB;
	case SDLK_KP_C				: return KeyAction::KeypadC;
	case SDLK_KP_D				: return KeyAction::KeypadD;
	case SDLK_KP_E				: return KeyAction::KeypadE;
	case SDLK_KP_F				: return KeyAction::KeypadF;
	case SDLK_KP_XOR			: return KeyAction::KeypadXor;
	case SDLK_KP_POWER			: return KeyAction::KeypadPower;
	case SDLK_KP_PERCENT		: return KeyAction::KeypadPercent;
	case SDLK_KP_LESS			: return KeyAction::KeypadLess;
	case SDLK_KP_GREATER		: return KeyAction::KeypadGreater;
	case SDLK_KP_AMPERSAND		: return KeyAction::KeypadAmpersand;
	case SDLK_KP_DBLAMPERSAND	: return KeyAction::KeypadDblampersand;
	case SDLK_KP_VERTICALBAR	: return KeyAction::KeypadVerticalbar;
	case SDLK_KP_DBLVERTICALBAR : return KeyAction::KeypadDblverticalbar;
	case SDLK_KP_COLON			: return KeyAction::KeypadColon;
	case SDLK_KP_HASH			: return KeyAction::KeypadHash;
	case SDLK_KP_SPACE			: return KeyAction::KeypadSpace;
	case SDLK_KP_AT				: return KeyAction::KeypadAt;
	case SDLK_KP_EXCLAM			: return KeyAction::KeypadExclam;
	case SDLK_KP_MEMSTORE		: return KeyAction::KeypadMemstore;
	case SDLK_KP_MEMRECALL		: return KeyAction::KeypadMemrecall;
	case SDLK_KP_MEMCLEAR		: return KeyAction::KeypadMemclear;
	case SDLK_KP_MEMADD			: return KeyAction::KeypadMemadd;
	case SDLK_KP_MEMSUBTRACT	: return KeyAction::KeypadMemsubtract;
	case SDLK_KP_MEMMULTIPLY	: return KeyAction::KeypadMemmultiply;
	case SDLK_KP_MEMDIVIDE		: return KeyAction::KeypadMemdivide;
	case SDLK_KP_PLUSMINUS		: return KeyAction::KeypadPlusminus;
	case SDLK_KP_CLEAR			: return KeyAction::KeypadClear;
	case SDLK_KP_CLEARENTRY		: return KeyAction::KeypadClearentry;
	case SDLK_KP_BINARY			: return KeyAction::KeypadBinary;
	case SDLK_KP_OCTAL			: return KeyAction::KeypadOctal;
	case SDLK_KP_DECIMAL		: return KeyAction::KeypadDecimal;
	case SDLK_KP_HEXADECIMAL	: return KeyAction::KeypadHexadecimal;
	case SDLK_LCTRL				: return KeyAction::KeyLctrl;
	case SDLK_LSHIFT			: return KeyAction::KeyLshift;
	case SDLK_LALT				: return KeyAction::KeyLalt;
	case SDLK_LGUI				: return KeyAction::KeyLgui;
	case SDLK_RCTRL				: return KeyAction::KeyRctrl;
	case SDLK_RSHIFT			: return KeyAction::KeyRshift;
	case SDLK_RALT				: return KeyAction::KeyRalt;
	case SDLK_RGUI				: return KeyAction::KeyRgui;
	case SDLK_MODE				: return KeyAction::KeyMode;
	case SDLK_AUDIONEXT			: return KeyAction::KeyAudionext;
	case SDLK_AUDIOPREV			: return KeyAction::KeyAudioprev;
	case SDLK_AUDIOSTOP			: return KeyAction::KeyAudiostop;
	case SDLK_AUDIOPLAY			: return KeyAction::KeyAudioplay;
	case SDLK_AUDIOMUTE			: return KeyAction::KeyAudiomute;
	case SDLK_MEDIASELECT		: return KeyAction::KeyMediaselect;
	case SDLK_WWW				: return KeyAction::KeyWww;
	case SDLK_MAIL				: return KeyAction::KeyMail;
	case SDLK_CALCULATOR		: return KeyAction::KeyCalculator;
	case SDLK_COMPUTER			: return KeyAction::KeyComputer;
	case SDLK_AC_SEARCH			: return KeyAction::KeyAcSearch;
	case SDLK_AC_HOME			: return KeyAction::KeyAcHome;
	case SDLK_AC_BACK			: return KeyAction::KeyAcBack;
	case SDLK_AC_FORWARD		: return KeyAction::KeyAcForward;
	case SDLK_AC_STOP			: return KeyAction::KeyAcStop;
	case SDLK_AC_REFRESH		: return KeyAction::KeyAcRefresh;
	case SDLK_AC_BOOKMARKS		: return KeyAction::KeyAcBookmarks;
	case SDLK_BRIGHTNESSDOWN	: return KeyAction::KeyBrightnessdown;
	case SDLK_BRIGHTNESSUP		: return KeyAction::KeyBrightnessup;
	case SDLK_DISPLAYSWITCH		: return KeyAction::KeyDisplayswitch;
	case SDLK_KBDILLUMTOGGLE	: return KeyAction::KeyKbdillumtoggle;
	case SDLK_KBDILLUMDOWN		: return KeyAction::KeyKbdillumdown;
	case SDLK_KBDILLUMUP		: return KeyAction::KeyKbdillumup;
	case SDLK_EJECT				: return KeyAction::KeyEject;
	case SDLK_SLEEP				: return KeyAction::KeySleep;
	case SDLK_APP1				: return KeyAction::KeyApp1;
	case SDLK_APP2				: return KeyAction::KeyApp2;
	case SDLK_AUDIOREWIND		: return KeyAction::KeyAudiorewind;
	case SDLK_AUDIOFASTFORWARD	: return KeyAction::KeyAudiofastforward;
	case SDLK_SOFTLEFT			: return KeyAction::KeySoftleft;
	case SDLK_SOFTRIGHT			: return KeyAction::KeySoftright;
	case SDLK_CALL				: return KeyAction::KeyCall;
	case SDLK_ENDCALL			: return KeyAction::KeyEndcall;
	default						: return KeyAction::KeyUnknown;
	}
}

void processEvents(SDL_Event& event) {
	switch (event.type) {
	case SDL_KEYDOWN:
	case SDL_KEYUP	: {
		auto keyAction = toKeyAction(event.key.keysym.sym);
		(void)keyAction;
		// processKeyActions(keyAction, event.type == SDL_KEYDOWN);
	}
	}
}

} // namespace tactics::input
